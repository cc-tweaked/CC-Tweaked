name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: 游닌 Clone repository
      uses: actions/checkout@v4

    - name: 游닌 Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: 游닌 Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-read-only: ${{ !startsWith(github.ref, 'refs/heads/mc-') }}

    - name: Disable Gradle daemon
      run: |
        mkdir -p ~/.gradle
        echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties

    - name: 丘뉦잺 Build
      run: ./gradlew assemble || ./gradlew assemble

    - name: Cache pre-commit
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: 游눠 Lint
      run: |
        pipx install pre-commit
        pre-commit run --show-diff-on-failure --color=always

    - name: 游빍 Run tests
      run: ./gradlew test validateMixinNames checkChangelog

    - name: 游닌 Download assets for game tests
      run: ./gradlew downloadAssets || ./gradlew downloadAssets

    - name: 游빍 Run integration tests
      run: ./gradlew runGametest

    - name: 游빍 Run client tests
      run: ./gradlew runGametestClient # Not checkClient, as no point running rendering tests.
      # These are a little flaky on GH actions: its useful to run them, but don't break the build.
      continue-on-error: true

    - name: 游빍 Parse test reports
      run: ./tools/parse-reports.py
      if: ${{ failure() }}

    - name: 游닍 Prepare Jars
      run: |
        # Find the main jar and append the git hash onto it.
        mkdir -p jars
        find projects/forge/build/libs projects/fabric/build/libs -type f -regex '.*[0-9.]+\(-SNAPSHOT\)?\.jar$' -exec bash -c 'cp {} "jars/$(basename {} .jar)-$(git rev-parse HEAD).jar"' \;

    - name: 游닋 Upload Jar
      uses: actions/upload-artifact@v4
      with:
        name: CC-Tweaked
        path: ./jars

    - name: 游닋 Upload coverage
      uses: codecov/codecov-action@v4

  build-core:
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Windows
          uses: windows-latest

        - name: macOS
          uses: macos-latest

    name: Test on ${{ matrix.name }}
    runs-on: ${{ matrix.uses }}

    steps:
    - name: 游닌 Clone repository
      uses: actions/checkout@v4

    - name: 游닌 Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: 游닌 Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-read-only: ${{ !startsWith(github.ref, 'refs/heads/mc-') }}

    - name: 丘뉦잺 Build
      run: |
        ./gradlew --configure-on-demand :core:assemble

    - name: 游빍 Run tests
      run: |
        ./gradlew --configure-on-demand :core:test

    - name: 游빍 Parse test reports
      run: python3 ./tools/parse-reports.py
      if: ${{ failure() }}
